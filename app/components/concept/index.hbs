<div
  {{did-insert this.handleDidInsertContainer}}
  {{did-update this.recalculateLastRevealedBlockGroupIndex @latestConceptEngagement}}
  {{will-destroy this.handleWillDestroyContainer}}
  ...attributes
>
  {{#each this.visibleBlockGroups as |blockGroup|}}
    <div
      class="scroll-mb-10 md:scroll-mb-[20vh] scroll-mt-20 md:scroll-mt-[20vh]
        {{if (not-eq blockGroup.index this.currentBlockGroupIndex) 'opacity-50 hover:opacity-100'}}"
    >
      {{#each blockGroup.blocks as |block|}}
        {{#if (eq block.type "markdown")}}
          {{! @glint-expect-error: not ts-ified yet }}
          <Blocks::MarkdownBlock @model={{block}} class="mb-6" data-test-block />
        {{else if (eq block.type "concept_animation")}}
          {{! @glint-expect-error: not ts-ified yet }}
          <Blocks::ConceptAnimationBlock @model={{block}} class="mb-6 py-4" data-test-block />
        {{else if (eq block.type "concept_question")}}
          <Blocks::ConceptQuestionBlock
            {{! @glint-expect-error: type is generic block}}
            @model={{block}}
            @isCurrentBlock={{eq blockGroup.index this.currentBlockGroupIndex}}
            @onContinueButtonClick={{this.handleContinueButtonClick}}
            @onStepBackButtonClick={{this.handleStepBackButtonClick}}
            class="mb-6"
            data-test-block
          />
        {{else if (eq block.type "click_to_continue")}}
          {{#if (eq blockGroup.index this.currentBlockGroupIndex)}}
            {{#unless this.hasFinished}}
              <Concept::ContinueOrStepBack
                {{! @glint-expect-error: buttonTextForDisplay not typecast yet }}
                @continueButtonText={{block.buttonTextForDisplay}}
                @onContinueButtonClick={{this.handleContinueButtonClick}}
                @onStepBackButtonClick={{this.handleStepBackButtonClick}}
                @shouldHighlightKeyboardShortcuts={{true}}
                @shouldShowContinueButton={{true}}
                @shouldShowStepBackButton={{not-eq this.currentBlockGroupIndex 0}}
                class="mb-6"
              />
            {{/unless}}
          {{/if}}
        {{else}}
          <div class="mb-6">
            Unknown block type:
            {{block.type}}.
          </div>
        {{/if}}
      {{/each}}
    </div>
  {{/each}}
</div>

{{! Preload all blocks that might contain images }}
<div class="hidden">
  {{#each this.allBlocks as |block|}}
    {{#if (eq block.type "markdown")}}
      {{! @glint-expect-error: block isn't typed as MarkdownBlock }}
      <Blocks::MarkdownBlock @model={{block}} />
    {{else if (eq block.type "concept_animation")}}
      {{! @glint-expect-error: block isn't typed as ConceptAnimationBlock }}
      <Blocks::ConceptAnimationBlock @model={{block}} />
    {{/if}}
  {{/each}}
</div>